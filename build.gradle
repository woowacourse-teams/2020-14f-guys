plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.woowacourse'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.apache.logging.log4j:log4j-web:2.12.1'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.820'
    implementation 'org.liquibase:liquibase-core'
    implementation 'mysql:mysql-connector-java:8.0.17'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.11.820'
    implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.9.3'
    implementation 'com.lmax:disruptor:3.4.2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.h2database:h2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.rest-assured:rest-assured:3.3.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.8.0'
    testImplementation 'com.squareup.okhttp3:okhttp:4.8.0'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-log4j2'
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacoco {
    toolVersion = '0.8.5'

}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false

        finalizedBy 'jacocoTestCoverageVerification'
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.30
            }
        }

        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }

            excludes = [
                    '*.config.*',
                    '*.common.*',
                    '*.Application'
            ]
        }

        rule {
            enabled = true
            element = 'METHOD'

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 20
            }
        }
    }
}

task testCoverage(type: Test) {
    group 'verification'
    description 'Runs the unit tests with coverage'

    dependsOn(':test', ':jacocoTestReport', ':jacocoTestCoverageVerification')

    tasks['jacocoTestReport'].mustRunAfter(tasks['test'])
    tasks['jacocoTestCoverageVerification'].mustRunAfter(tasks['jacocoTestReport'])
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}
